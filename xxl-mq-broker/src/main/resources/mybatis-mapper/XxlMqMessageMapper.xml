<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="XxlMqMessageMapper">
	
	<resultMap id="XxlMqMessage" type="com.xxl.mq.client.message.XxlMqMessage" >
		<result column="id" property="id" />
		<result column="name" property="name" />
	    <result column="data" property="data" />
	    <result column="delay_time" property="delayTime" />
	    <result column="add_time" property="addTime" />
	    <result column="update_time" property="updateTime" />
	    <result column="status" property="status" />
		<result column="msg" property="msg" />
		<result column="retry_count" property="retryCount" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.name ,
		t.data ,
		t.delay_time ,
		t.add_time ,
		t.update_time ,
		t.status ,
		t.msg,
		t.retry_count
	</sql>
	
	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlMqMessage">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_MQ_MESSAGE AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="name != null and name != ''">
				AND t.name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="status != null and status != ''">
				AND t.status = #{status}
			</if>
		</trim>
		ORDER BY t.add_time DESC
		LIMIT #{offset}, #{pagesize}
	</select>
	
	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM XXL_MQ_MESSAGE AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="name != null and name != ''">
				AND t.name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="status != null and status != ''">
				AND t.status = #{status}
			</if>
		</trim>
		ORDER BY t.add_time DESC
	</select>

	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM XXL_MQ_MESSAGE
		WHERE id = #{id}
	</delete>

	<update id="update" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE
		SET
			data = #{data},
			delay_time = #{delayTime},
			status = #{status},
			update_time = NOW(),
			msg = CONCAT( IFNULL(msg, ''), #{addMsg}),
			retry_count = #{retryCount}
		WHERE id = #{id}
	</update>

	<insert id="save" parameterType="com.xxl.mq.client.message.XxlMqMessage" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO XXL_MQ_MESSAGE (
		`name` ,
		`data` ,
		`delay_time` ,
		`add_time` ,
		`update_time` ,
		`status` ,
		`msg`,
		`retry_count`
		) VALUES (
		#{name},
		#{data},
		#{delayTime},
		NOW(),
		NOW(),
		#{status},
		#{msg},
		#{retryCount}
		);
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="pullNewMessage" parameterType="java.util.HashMap" resultMap="XxlMqMessage">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_MQ_MESSAGE AS t
		WHERE t.name = #{name}
		AND t.status = #{newStatus}
		AND t.delay_time <![CDATA[ < ]]> NOW()
		<if test="consumerTotal > 1">
			AND MOD(t.id, #{consumerTotal}) = #{consumerRank}
		</if>
		ORDER BY t.add_time DESC
		LIMIT #{pagesize}
	</select>

	<update id="lockMessage" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE
		SET
		update_time = NOW(),
		status = #{toStatus},
		msg = CONCAT( IFNULL(msg, ''), #{addMsg})
		WHERE id = #{id} AND status =  #{fromStatus}
	</update>

	<update id="updateStatus" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE
		SET
			update_time = NOW(),
			status = #{status},
		 	msg = CONCAT( IFNULL(msg, ''), #{addMsg})
		WHERE id = #{id}
	</update>

	<select id="pagelistRetryMessage" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
		SELECT t.id
		FROM XXL_MQ_MESSAGE AS t
		WHERE t.status = #{failStatus} AND t.retry_count <![CDATA[ > ]]> 0
		ORDER BY t.add_time ASC
		LIMIT #{pagesize}
	</select>

	<update id="retryStatusFresh" parameterType="java.util.HashMap" >
		UPDATE XXL_MQ_MESSAGE
		SET
			update_time = NOW(),
			status = #{newStatus},
			retry_count = retry_count-1 ,
			msg = CONCAT( IFNULL(msg, ''), #{addMsg})
		WHERE id = #{id}
			AND status =  #{failStatus}
			AND (retry_count -1) <![CDATA[ >= ]]> 0
	</update>
	
	<delete id="deleteExpired" parameterType="java.util.HashMap">
		DELETE FROM XXL_MQ_MESSAGE
		WHERE status = #{status} AND update_time<![CDATA[ < ]]>#{expiredTime}
	</delete>

</mapper>